name: Deploy to Pages

on:
  push:
    branches:
      - stickerpacks

permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

defaults:
  run:
    shell: bash

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Install bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4
      - name: Install bun dependencies
        run: "bun install"
      - name: Build website
        run: bun run gen
        env:
          ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY_ID }}
          SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS_KEY }}
          ENDPOINT: ${{ vars.ENDPOINT }}
          BUCKET: ${{ vars.BUCKET }}
          WEB_URL: ${{ vars.WEB_URL }}
      # - name: cleanup
        # run: rm -rf .vscode && rm -rf .github && rm -rf src && rm -rf node_modules && rm -f tailwind.config.js && rm -f .gitignore && rm -f package.json && rm -f package-lock.json
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out/

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4